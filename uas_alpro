#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#define NAMA_FILE "data.txt"

struct Buku
{
    char judul[50];
    char pengarang[50];
    char penerbit[50];
    int tahun_terbit;
    int pinjam;
};

int check_index_terakhir_terisi(struct Buku arr[], int size)
{
    int count = 0;
    for (int i = 0; i < size; i++)
    {
        if (arr[i].judul[0] != '\0')
            count++;
    }
    return count;
}

void check_open(const FILE *file)
{
    if (file == NULL)
    {
        printf("File tidak bisa dibuka");
        exit(1);
    }
}

void load_file(FILE *file, struct Buku *buku, int size)
{
    check_open(file);

    fread(buku, sizeof(struct Buku), size, file);

    fclose(file);
}

void write_data(FILE *file, struct Buku *buku, int size)
{

check_open(file);

    fwrite(buku, sizeof(struct Buku), size, file);

    printf("Data berhasil disimpan");
    fclose(file);
}

void tambah_data(struct Buku *buku, int size)
{
    printf("\nTAMBAH BUKU---------------------------------\n");
    int jumlah_data;
    printf("masukkan jumlah Data :");
    scanf("%d", &jumlah_data);
    scanf("%*c");
    fflush(stdin);

    for (int i = 1; i <= jumlah_data; i++)
    {
        fflush(stdin);
        printf("\nDATA (%d)\n", i);
        struct Buku buku_baru;
        buku_baru.pinjam = 0;

        printf("Masukkan judul      :");
        scanf("%[^\n]%*c", buku_baru.judul);
        fflush(stdin);

        printf("Masukkan pengarang  :");
        scanf("%[^\n]%*c", buku_baru.pengarang);

        printf("Masukkan penerbit   :");
        scanf("%[^\n]%*c", buku_baru.penerbit);

        printf("Masukkan tahun terbit  :");
        scanf("%d%*c", &buku_baru.tahun_terbit);

        int ekor = check_index_terakhir_terisi(buku, size);

        buku[ekor] = buku_baru;
    }
}

void cari_buku_berdasarkan_nama(struct Buku *buku, int size)
{
    printf("\nPENCARIAN BUKU------------------------------\n");
    struct Buku buku_didapat;
    char nama[50];
    printf("Judul Buku :");
    scanf("%49[^\n]", nama);

    for (int i = 0; i < size; i++)
    {
        buku_didapat = buku[i];
        if (strcmp(buku_didapat.judul, nama) == 0)
        {
            printf("\nData---------------------------------------+\n");
            buku_didapat = buku[i];
            printf("judul buku\t:%s\n", buku_didapat.judul);
            printf("pengarang\t:%s\n", buku_didapat.pengarang);
            printf("penerbit\t:%s\n", buku_didapat.penerbit);
            printf("tahun terbit\t:%d\n", buku_didapat.tahun_terbit);
            printf("status \t\t:%s\n", buku_didapat.pinjam ? "dipinjam" : "tidak dipinjam");
            return;
        }
    }

    printf("Tidak ditemukan buku dengan judul \"%s\"\n", nama);
}

void pilihan_fitur()
{
    printf("FITUR APLIKASI------------------------------\n");
    printf("[1] cari buku\n");
    printf("[2] tambah Buku\n");
    printf("[3] pinjam buku\n");
    printf("[4] kembalikan buku\n");
    printf("[5] simpan perubahan\n");
    printf("[6] keluar\n");
}

int main(int argc, char const *argv[])
{
    FILE *file;
    file = fopen(NAMA_FILE, "r");
    struct Buku buku[100];
    load_file(file, buku, sizeof(buku) / sizeof(struct Buku));
    while (1)
    {
        pilihan_fitur();
        int pilihan;
        printf(": ");
        scanf("%d", &pilihan);
        scanf("%*c");

        int size = sizeof(buku) / sizeof(struct Buku);
        switch (pilihan)
        {
        case 1:
            // cari buku
            cari_buku_berdasarkan_nama(buku, size);
            break;
        case 2:
            // tambah buku_tmp
            tambah_data(buku, size);
            break;
        case 3:
            // pinjam buku
            pinjam_buku_berdasarkan_nama(buku, size);
            break;
        case 4:
            // mengembalikan buku
            kembalikan_buku_berdasarkan_nama(buku, size);
            break;
        case 5:
            // simpan perubahan
            file = fopen(NAMA_FILE, "w");
            write_data(file, buku, size);
            break;
        default:
            return 0;
            break;
        }
        printf("\n\n");
    }
    return 0;
}
